setwd("/Users/alorozco22/OneDrive - Universidad de los Andes/Documentos 2021-20/2021 08 30 EdCo Curso Capstone IA prescriptiva/repo-analitica-prescriptiva/datos")
data <- read.csv(file="binary.csv")
str(data)
View(data)
?read.csv
data$gre <- (data$gre - min(data$gre))/(max(data$gre) - min(data$gre))
data$gpa <- (data$gpa - min(data$gpa))/(max(data$gpa) - min(data$gpa))
data$rank <- (data$rank - min(data$rank))/(max(data$rank) - min(data$rank))
cor(data$admit, data$gre)
cor(data$admit, data$gpa)
cor(data$admit, data$rank)
set.seed(222)
ind <- sample(2, nrow(data), replace = TRUE, prob = c(0.7, 0.3))
head(ind)
training <- data[ind==1,]
testing <- data[ind==2,]
View(training)
View(testing)
ind
ind == 1
285/400
115/400
install.packages("neuralnet")
library(neuralnet)
?neuralnet
n <- neuralnet(admit~gre+gpa+rank,
data = training,
hidden = 2,
err.fct = "ce",
linear.output = FALSE)
plot(n)
output <- compute(n, training[,-1])
head(output$net.result) # Este modelo nos devuelve la probabilidad de que la persona sea admitida
head(training[,]) # Estos son los datos de entrenamiento originales, para ver
output_test <- compute(n, testing[,-1])
head(output_test$net.result) # La probabilidad de que la persona sea admitida
head(testing[,]) # Estos son los datos de entrenamiento originales, para ver
# Matriz de confusión & Error de clasificación - datos conocidos (de entrenamiento)
output <- compute(n, training[,-1])
p1 <- output$net.result
pred1 <- ifelse(p1>0.5, 1, 0)
tab1 <- table(pred1, training$admit)
tab1 # MATRIZ DE CONFUSIÓN
1-sum(diag(tab1))/sum(tab1)
# Ejercicio: Matriz de confusión & Error de clasificación - datos nuevos (de prueba)
output <- compute(n, testing[,-1])
p2 <- output$net.result
pred2 <- ifelse(p2>0.5, 1, 0)
tab2 <- table(pred2, testing$admit)
tab2 # MATRIZ DE CONFUSIÓN
1-sum(diag(tab2))/sum(tab2)
